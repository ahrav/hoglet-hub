apiVersion: v1
kind: Namespace
metadata:
  name: hoglet-hub
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: provisioning-server
  namespace: hoglet-hub
  labels:
    app: provisioning-server
    component: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: provisioning-server
      component: api
  template:
    metadata:
      labels:
        app: provisioning-server
        component: api
    spec:
      serviceAccountName: hoglet-hub-sa
      containers:
      - name: provisioning-server
        image: provisioning-server:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
        env:
        # Pod metadata
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        # Database configuration
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: hoglet-config
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          value: postgres
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: hoglet-config
              key: POSTGRES_HOST
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: hoglet-config
              key: POSTGRES_DB
        # OpenTelemetry Configuration
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: hoglet-config
              key: OTEL_EXPORTER_OTLP_ENDPOINT
        - name: OTEL_SERVICE_NAME
          value: "provisioning-server"
        - name: OTEL_SAMPLING_RATIO
          valueFrom:
            configMapKeyRef:
              name: hoglet-config
              key: OTEL_SAMPLING_RATIO
        # API configuration
        - name: API_HOST
          value: "0.0.0.0"
        - name: API_PORT
          value: "8080"
        # Debug configuration
        - name: DEBUG_HOST
          value: "0.0.0.0"
        - name: DEBUG_PORT
          value: "6060"
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "400m"
        readinessProbe:
          httpGet:
            path: /api/v1/health/readiness
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /api/v1/health/liveness
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 20
        volumeMounts:
        - name: hoglet-config
          mountPath: /etc/hoglet/config
          readOnly: true
      volumes:
      - name: hoglet-config
        configMap:
          name: hoglet-config
      initContainers:
      - name: wait-for-postgres
        image: busybox:1.28
        command: ['sh', '-c', 'until nc -z $(POSTGRES_HOST) 5432; do echo waiting for postgres; sleep 2; done;']
        env:
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: hoglet-config
              key: POSTGRES_HOST
      - name: wait-for-otel
        image: busybox:1.28
        command: ['sh', '-c', 'until nc -z otel-collector 4317; do echo "waiting for otel-collector"; sleep 2; done;']
---
apiVersion: v1
kind: Service
metadata:
  name: provisioning-server-svc
  namespace: hoglet-hub
spec:
  selector:
    app: provisioning-server
