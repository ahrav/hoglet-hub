apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-data
  namespace: hoglet-hub
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: hoglet-hub
data:
  # PostgreSQL-specific configuration only
  pg_hba.conf: |
    local   all             all                                     trust
    host    all             all             0.0.0.0/0               trust
    host    all             all             ::1/128                 trust
    local   replication     all                                     trust
    host    replication     all             0.0.0.0/0               trust
    host    replication     all             ::1/128                 trust
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: hoglet-hub
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      # Production-ready configurations (commented out for local development)
      # tolerations:
      # - key: "database"
      #   operator: "Equal"
      #   value: "true"
      #   effect: "NoSchedule"
      # nodeSelector:
      #   database: "true"
      containers:
      - name: postgres
        image: postgres:17.2
        ports:
        - containerPort: 5432
          name: postgres
        envFrom:
        - configMapRef:
            name: hoglet-config
        env:
        - name: POSTGRES_PASSWORD
          value: postgres  # In production, use a secret
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        - name: postgres-config
          mountPath: /etc/postgresql/pg_hba.conf
          subPath: pg_hba.conf
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          exec:
            command: ["pg_isready", "-U", "postgres"]
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command: ["pg_isready", "-U", "postgres"]
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: postgres-config
        configMap:
          name: postgres-config
  volumeClaimTemplates:
  - metadata:
      name: postgres-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: hoglet-hub
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: postgres
    name: postgres
  selector:
    app: postgres
